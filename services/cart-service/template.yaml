AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cart CRUD Service

Resources:
  cart:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Cart
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  cartFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: cart.lambda_handler
      Runtime: python3.12
      CodeUri: ./cart-function
      Timeout: 60
      Environment:
        Variables:
          TABLE_NAME: !Ref cart
          IS_LOCAL: "true"
          DYNAMODB_ENDPOINT: "http://dynamodb-local:8000"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref cart

  # /cart
  cartResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !ImportValue SharedApiGatewayResourceId
      RestApiId: !ImportValue SharedApiGateway
      PathPart: "cart"

  # /cart/{id}
  cartWithIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref cartResource
      RestApiId: !ImportValue SharedApiGateway
      PathPart: "{id}"

  apiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: "cart-authorizer"
      Type: "COGNITO_USER_POOLS"
      IdentitySource: "method.request.header.Authorization"
      RestApiId: !ImportValue SharedApiGateway
      ProviderARNs:
        - !ImportValue SharedCognitoUserPoolArn

  apiGatewayCartResource:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref apiGatewayAuthorizer
      AuthorizationScopes:
        - "openid"
      HttpMethod: ANY
      ResourceId: !Ref cartResource
      RestApiId: !ImportValue SharedApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations"
          - FunctionArn: !GetAtt cartFunction.Arn

  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt cartFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/*"
        - RestApiId: !ImportValue SharedApiGateway

  apiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !ImportValue SharedApiGateway
      StageName: prod