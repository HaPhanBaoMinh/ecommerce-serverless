AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Order Service

Resources:
  order:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Order
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: order_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: order_id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # /order
  orderResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !ImportValue SharedApiGatewayResourceId
      RestApiId: !ImportValue SharedApiGateway
      PathPart: "order"

  # Create SQS
  orderQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: order-queue

  # Put message in SQS
  apiGatewayOrderResource:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      AuthorizationType: "NONE"
      ResourceId: !Ref orderResource
      RestApiId: !ImportValue SharedApiGateway
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:sqs:path/${QueueName}
          - QueueName: !GetAtt orderQueue.QueueName
        Credentials: !GetAtt apiGatewayExecutionRole.Arn
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        RequestTemplates:
          application/json: 'Action=SendMessage&MessageBody=$input.body'
        IntegrationResponses:
          - StatusCode: 200
        PassthroughBehavior: NEVER

      MethodResponses:
        - StatusCode: 200

  apiGatewayExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ApiGatewayExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewaySQSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt orderQueue.Arn

  sqsAccessPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref orderQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: sqs:SendMessage
            Resource: !GetAtt orderQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub 
                  - "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayId}/*/POST/order"
                  - ApiGatewayId: !ImportValue SharedApiGateway                

  orderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: order.lambda_handler
      Runtime: python3.12
      CodeUri: ./order-function
      Environment:
        Variables:
          TABLE_NAME: !Ref order
          QUEUE_URL: !GetAtt orderQueue.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref order
        - SQSSendMessagePolicy:
            QueueName: !GetAtt orderQueue.QueueName
      Events:
        OrderEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt orderQueue.Arn
            BatchSize: 1
