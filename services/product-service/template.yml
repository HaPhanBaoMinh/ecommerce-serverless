AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Product CRUD Service

Resources:
  product:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Product
      AttributeDefinitions:
        - AttributeName: product_id
          AttributeType: S
      KeySchema:
        - AttributeName: product_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  productFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.12
      CodeUri: ./product-function
      Timeout: 60
      Environment:
        Variables:
          TABLE_NAME: !Ref product
          IS_LOCAL: "false"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref product
  
  # /products 
  productsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !ImportValue SharedApiGatewayResourceId
      RestApiId: !ImportValue SharedApiGateway
      PathPart: products

  # /products/{product_id}
  productsWithIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref productsResource
      RestApiId: !ImportValue SharedApiGateway
      PathPart: "{product_id}"

  apiGatewayProductResource:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      ResourceId: !Ref productsResource
      RestApiId: !ImportValue SharedApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
          - FunctionArn: !GetAtt productFunction.Arn

  apiGatewayWithIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      ResourceId: !Ref productsWithIdResource
      RestApiId: !ImportValue SharedApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
          - FunctionArn: !GetAtt productFunction.Arn

  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt productFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*
        - ApiGateway: !ImportValue SharedApiGateway

  apiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - apiGatewayProductResource
      - apiGatewayWithIdMethod
    Properties:
      RestApiId: !ImportValue SharedApiGateway
      StageName: prod

